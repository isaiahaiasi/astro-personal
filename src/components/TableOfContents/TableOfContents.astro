---
import HeadingSubtree from "./HeadingSubtree";
import type { Heading, NestedHeading } from "./types";

export interface Props {
	headings: Heading[];
	title: string;
}

const { headings, title } = Astro.props;

const root = (function getHeadingTree(title: string, headings: Heading[]) {
	const root = {
		text: title,
		slug: "",
		depth: 0,
	};

	const headingStack: NestedHeading[] = [root];

	for (const heading of headings) {
		while (
			headingStack.length > 0 &&
			headingStack.at(-1)!.depth >= heading.depth
		) {
			headingStack.pop();
		}

		headingStack.at(-1)!.children ??= [];
		headingStack.at(-1)!.children?.push(heading);
		headingStack.push(heading);
	}

	return root;
})(title, headings);

// TODO: Use something like intersection observer to get "active" heading
---

<div class="table-of-contents">
	<h2 class="text-gradient">Table of Contents</h2>
	<button class="headings-toggle">Show contents</button>
</div>
<div class="headings-container">
	<ul>
		<HeadingSubtree heading={root} />
	</ul>
</div>

<script>
	(function handleActiveHeading() {
		let active: Element | null = null;
		const root = document.querySelector(".headings-container");

		root?.addEventListener("click", ({ target }) => {
			if (active) {
				active.classList.remove("active");
				active = null;
			}

			if (target instanceof Element && target.tagName === "A") {
				target.classList.add("active");
				active = target;
			}
		});
	})();
</script>

<style>
	h2 {
		margin: 0;
	}
	.table-of-contents {
		display: flex;
		justify-content: space-between;
	}

	.headings-container:not(.active) {
		display: none;
	}

	.headings-container > ul {
		border-left: none;
		margin: 0;
	}

	@media only screen and (min-width: 1200px) {
		.headings-container:not(.active) {
			display: block;
		}

		.headings-toggle {
			display: none;
		}
	}
</style>

{/* global directive to access elements from Preact component */}
<style is:global>
	.headings-container ul {
		list-style: none;
		padding: 0;
		margin-left: 0.5rem;
		border-left: 1px solid grey;
	}

	.headings-container li {
		padding: 0 0 0 1rem;
		display: block;
	}

	.headings-container a {
		display: inline-block;
		padding: 0.5rem;
		border-radius: 4px;
	}

	.headings-container a:not(.active):hover {
		background: rgb(var(--highlight), 0.75);
	}

	.headings-container a.active {
		background: rgb(var(--light-accent));
		animation: bgfadeout 1.5s ease-in-out forwards;
	}

	@keyframes bgfadeout {
		0% {
			background-color: rgb(var(--light-accent));
		}
		100% {
			background-color: var(--col-bg);
		}
	}
</style>
