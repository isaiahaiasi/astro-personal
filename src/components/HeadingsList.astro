---
import HeadingTree from "./HeadingTree";

const { headings, title } = Astro.props;

interface Heading {
    depth: number;
    slug: string;
    text: string;
}

interface NestedHeading extends Heading {
    children?: NestedHeading[];
}

const root: NestedHeading = {
    text: title,
    slug: "",
    depth: 0,
};

const headingStack = [root];

for (const heading of headings) {
    while (
        headingStack.length > 0 &&
        headingStack.at(-1)!.depth >= heading.depth
    ) {
        headingStack.pop();
    }

    headingStack.at(-1)!.children ??= [];
    headingStack.at(-1)!.children?.push(heading);
    headingStack.push(heading);
}
---

<div class="heading-tree">
    <ul>
        <HeadingTree heading={root} />
    </ul>
</div>

<script>
    let active: Element | null = null;
    const root = document.querySelector(".heading-tree");

    root?.addEventListener("click", ({ target }) => {
        if (active) {
            active.classList.remove("active");
            active = null;
        }

        if (target instanceof Element && target.tagName === "A") {
            target.classList.add("active");
            active = target;
        }
    });
</script>

<style is:global>
    .heading-tree {
        --headings-col-highlight: skyblue;
        --headings-col-active: yellow;
    }

    .heading-tree ul {
        list-style: none;
        padding: 0;
    }

    .heading-tree li {
        padding: 0 0 0 1rem;
        line-height: 1.5rem;
    }

    .heading-tree a:hover {
        background: var(--headings-col-highlight);
    }

    .heading-tree .active {
        background: var(--headings-col-active);
    }
</style>
