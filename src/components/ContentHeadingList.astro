---
import HeadingTree from "./ContentHeadingTree";

interface Heading {
	depth: number;
	slug: string;
	text: string;
}

interface NestedHeading extends Heading {
	children?: NestedHeading[];
}

export interface Props {
	headings: Heading[];
	title: string;
}

const { headings, title } = Astro.props;

const root: NestedHeading = {
	text: title,
	slug: "",
	depth: 0,
};

const headingStack = [root];

for (const heading of headings) {
	while (
		headingStack.length > 0 &&
		headingStack.at(-1)!.depth >= heading.depth
	) {
		headingStack.pop();
	}

	headingStack.at(-1)!.children ??= [];
	headingStack.at(-1)!.children?.push(heading);
	headingStack.push(heading);
}
// TODO: Use something like intersection observer to get "active" heading
---

<div class="heading-tree">
	<ul>
		<HeadingTree heading={root} />
	</ul>
</div>

{/* This interactivity didn't feel worth bringing Preact state into the mix */}
<script>
	let active: Element | null = null;
	const root = document.querySelector(".heading-tree");

	root?.addEventListener("click", ({ target }) => {
		if (active) {
			active.classList.remove("active");
			active = null;
		}

		if (target instanceof Element && target.tagName === "A") {
			target.classList.add("active");
			active = target;
		}
	});
</script>

{/* global directive to access elements from Preact component */}
<style is:global>
	.heading-tree {
		--headings-col-highlight: skyblue;
		--headings-col-active: rgb(255, 196, 237);
	}

	.heading-tree ul {
		list-style: none;
		padding: 0;
		margin-left: 0.5rem;
		border-left: 1px solid grey;
	}

	.heading-tree > ul {
		border-left: none;
		margin: none;
	}

	.heading-tree li {
		padding: 0 0 0 1rem;
		display: block;
	}

	.heading-tree a {
		display: block;
		padding: 0.5rem;
		border-radius: 4px;
	}

	.heading-tree a:not(.active):hover {
		background: var(--headings-col-highlight);
	}

	.heading-tree a.active {
		background: var(--headings-col-active);
		animation: bgfadeout 1.5s ease-in-out forwards;
	}

	@keyframes bgfadeout {
		0% {
			background-color: var(--headings-col-active);
		}
		100% {
			background-color: var(--col-bg);
		}
	}
</style>
