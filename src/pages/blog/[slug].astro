---
import { CollectionEntry, getCollection } from "astro:content";
import BlogPostInfo from "../../components/BlogPostInfo.astro";
import BlogPostList from "../../components/BlogPostList.astro";
import TableOfContents from "../../components/TableOfContents/TableOfContents.astro";
import Layout from "../../layouts/Layout.astro";

interface Props {
	post: CollectionEntry<"blog">;
	relevantPosts: CollectionEntry<"blog">[];
}

export async function getStaticPaths() {
	// TODO: Would like to wrap this as getPublishedCollection,
	// But not sure how to preserve generic typing with non-exported types
	const now = new Date();
	const entries = await getCollection(
		"blog",
		({ data }) => !data.draft && data.publishedAt < now
	);

	// There might be no posts with shared tags; in that case, get 3 most recent
	const recentPosts = entries
		.sort((a, b) => (a.data.publishedAt < b.data.publishedAt ? 1 : -1))
		.slice(0, 3);

	return entries.map((post) => {
		const relatedPosts = entries.filter(({ id, data: { tags } }) => {
			return id !== post.id && tags.some((tag) => post.data.tags.includes(tag));
		});

		const relevantPosts =
			relatedPosts.length > 0
				? relatedPosts
				: recentPosts.filter(({ id }) => id !== post.id);

		return {
			params: { slug: post.slug },
			props: { post, relevantPosts },
		};
	});
}

const { post, relevantPosts } = Astro.props;
const { data } = post;
const { Content, headings } = await post.render();
---

<Layout title={data.title}>
	<div class="container">
		<div class="sidebar left w-prose">
			<TableOfContents headings={headings} title={data.title} />
		</div>
		<main class="center">
			<div class="w-prose">
				<div class="title-group">
					<h1 class="text-gradient">{data.title}</h1>
					<BlogPostInfo data={data} />
				</div>
				<div class="content">
					<Content />
				</div>
			</div>
		</main>
		<div class="sidebar left w-prose">
			<h2 class="text-gradient">Related Blog Posts</h2>
			<BlogPostList posts={relevantPosts} />
		</div>
	</div>
</Layout>

<script>
	const toggle = document.querySelector(".headings-toggle");
	const headings = document.querySelector(".headings-container");
	toggle?.addEventListener("click", () => {
		headings?.classList.toggle("active");
	});
</script>

<style>
	h2 {
		margin: 0;
	}
	.container {
		scroll-behavior: smooth;
		scroll-margin-top: 0.75rem;
		display: flex;
		flex-direction: column;
		gap: 1rem;
		overflow-y: auto;
		min-width: 0;
	}

	.center {
		max-width: 100%;
	}

	.sidebar {
		padding: 0 0.25rem;
		align-self: stretch;
	}

	.title-group {
		padding: 0 0.25rem;
	}

	@media only screen and (min-width: 1200px) {
		.container {
			flex-direction: row-reverse;
		}

		.sidebar {
			top: 0;
			position: sticky;
			max-width: 20vw;
			padding: 1.5rem;
		}
	}
</style>
