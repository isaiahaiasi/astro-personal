---
import { CollectionEntry, getCollection } from "astro:content";
import BlogPostList from "../../components/BlogPostList.astro";
import ContentHeadingList from "../../components/ContentHeadingList.astro";
import Layout from "../../layouts/Layout.astro";
import { formatDate } from "../../utils/formatDate";

interface Props {
    post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
    const entries = await getCollection("blog");
    const now = new Date();

    return entries
        .filter((post) => post.data.publishedAt < now)
        .map((post) => ({
            params: { slug: post.slug },
            props: { post },
        }));
}

const { post } = Astro.props;
const { data } = post;
const { Content, headings } = await post.render();

/** Filter collection for entries which share a tag with this post
 *
 * (not optimized for large collections)
 */
function filterRelatedPosts({ id, data: { tags } }: CollectionEntry<"blog">) {
    if (id === post.id) {
        return false;
    }

    return tags.some((tag) => post.data.tags.includes(tag));
}
---

<Layout title={data.title}>
    <div class="container">
        <div class="sidebar left">
            <h2 class="text-gradient">Other Blog Posts</h2>
            <BlogPostList filter={filterRelatedPosts} />
        </div>
        <main class="center-content">
            <div class="w-prose">
                <h1 class="text-gradient">{data.title}</h1>
                {
                    data.publishedAt && (
                        <p class="descriptive">
                            Published {formatDate(data.publishedAt)}
                        </p>
                    )
                }
                <Content />
            </div>
        </main>
        <div class="sidebar right">
            <h2 class="text-gradient">Table of Contents</h2>
            <ContentHeadingList headings={headings} title={data.title} />
        </div>
    </div>
</Layout>

<style>
    .container {
        position: relative;
        display: flex;
    }
    .sidebar {
        align-self: flex-start;
        top: 0;
        position: sticky;
        padding: 1.5rem;
        max-width: 15vw;
    }
    .center-content {
        flex: 1;
    }
</style>
